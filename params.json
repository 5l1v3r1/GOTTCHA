{"name":"GOTTCHA","tagline":"Accurate read-based metagenome characterization using a hierarchical suite of unique signatures","body":"# Genomic Origin Through Taxonomic CHAllenge (GOTTCHA)\r\n\r\nGOTTCHA is an application of a novel, gene-independent and signature-based metagenomic\r\ntaxonomic profiling method with significantly smaller false discovery rates (FDR) that is \r\nlaptop deployable. Our algorithm was tested and validated on twenty synthetic and mock \r\ndatasets ranging in community composition and complexity, was applied successfully to data\r\ngenerated from spiked environmental and clinical samples, and robustly demonstrates \r\nsuperior performance compared with other available tools.\r\n\r\n-------------------------------------------------------------------\r\n## SYSTEM REQUIREMENT\r\n\r\nLinux (2.6 kernel or later) or Mac (OSX 10.6 Snow Leopard or later) operating system\r\nwith minimal 8 GB of RAM is recommended. Perl v5.8 or above is required. The C/C++\r\ncompiling enviroment might be required for installing dependencies. Systems may vary.\r\nPlease assure that your system has the essential software building packages (e.g. build-essential\r\nfor Ubuntu, XCODE for Mac...etc) installed properly before running the installing \r\nscript.\r\n\r\nGOTTCHA was tested successfully on our Linux servers (Ubuntu 12.10 w/ Perl v5.14.2; \r\nUbuntu 10.04 w/ Perl v5.10.1) and Macbook Pro laptops (MAC OSX 10.8 w/ XCODE v5.1).\r\n\r\n-------------------------------------------------------------------\r\n## QUICK START \r\n\r\nThis is an example of profiling a \"test.fastq\" file using GOTTCHA with a species-level\r\npre-computed bacterial database. The testing FASTQ file comes along with the GOTTCHA package\r\nin the \"test\" directory. More details are stated in the INSTRUCTION section.\r\n\r\n1. Obtaining GOTTCHA package:\r\n\r\n        $ git clone https://github.com/LANL-Bioinformatics/GOTTCHA.git gottcha\r\n\r\n2. Installing GOTTCHA:\r\n\r\n        $ cd gottcha\r\n        $ ./INSTALL.sh\r\n\r\n3. Downloading lookup table and species-level database from our SFTP server.\r\n   Use '9001gottcha' as the password when the request prompts:\r\n \r\n        $ sftp -o \"Port 33001\" gottcha@img-gp.lanl.gov:gottcha/GOTTCHA_lookup.tar.gz ./\r\n        $ sftp -o \"Port 33001\" gottcha@img-gp.lanl.gov:gottcha/GOTTCHA_BACTERIA_c3514_k24_u24.species.tar.gz ./\r\n   \r\n   If you have any difficulty obtaining the databases, please contact Po-E Li <po-e@lanl.gov>.\r\n\r\n4. Unpacking and decompressing archives:\r\n\r\n        $ tar -zxvf GOTTCHA_lookup.tar.gz\r\n        $ tar -zxvf GOTTCHA_BACTERIA_c3514_k24_u24.species.tar.gz\r\n\t\r\n5. Running gottcha.pl: \r\n\r\n        $ bin/gottcha.pl             \\\r\n             --threads 8             \\\r\n             --outdir ./             \\\r\n             --input test/test.fastq \\\r\n             --database database/GOTTCHA_BACTERIA_c3514_k24_u24.species\r\n\r\n6. Enjoying the result at './test.gottcha.tsv'.\r\n\r\n-------------------------------------------------------------------\r\n## DETAIL INSTRUCTIONS\r\n\r\nThe detail of steps in the above section will be descrbed in this section. Note that all \r\ninstructions in this document use pre-computed databases downloaded from our SFTP site.\r\n\r\nIf you are looking for instructions to build a CUSTOM database and/or running GOTTCHA\r\nstep-by-step, please read README_FULL.md.\r\n\r\n-------------------------------------------------------------------\r\n### Obtaining GOTTCHA\r\n\r\nThe source codes can be downloading from [here](https://bitbucket.org/poeli/gottcha).\r\nThe pre-computed databases need to be downloaded separately from our SFTP server.\r\nPlease see below in the [Obtaining Pre-computed Databases] section.\r\n       \r\nYou can use \"git\" to obtain the package:\r\n\r\n        $ git clone https://bitbucket.org/poeli/gottcha\r\n\r\nor download the compressed archive in\r\n [zip](https://bitbucket.org/poeli/gottcha/get/master.zip),\r\n [gz](https://bitbucket.org/poeli/gottcha/get/master.tar.gz) or \r\n [bz2](https://bitbucket.org/poeli/gottcha/get/master.tar.bz2).\r\n\r\n-------------------------------------------------------------------\r\n### Installation\r\n\r\nThe GOTTCHA profiling and database-generating scripts are primarily Perl-based, and require at\r\nleast Perl v5.8 with dependencies installed properly (listed in README_FULL.md).\r\nThe splitrim tool is written in [D](http://www.dlang.org) that requires an appropriate D \r\ncompiler to complie it. GOTTCHA utilizes [BWA](https://github.com/lh3/bwa) with the BWA-MEM algorithm\r\nfor read mapping. You can either keep \"dmd\" and \"bwa\" in your system path or simply \r\nrun the installation script - INSTALL.sh. This script will check and try to install missing \r\ntools and dependencies:\r\n\r\n    \t$ ./INSTALL.sh\r\n\r\nAfter running INSTALL.sh successfully, the binaries and related scripts will be stored\r\nin the ./bin directory.\r\n\r\n-------------------------------------------------------------------\r\n### Obtaining Pre-computed Databases\r\n\r\nDatabases of unique genome segments at multiple taxonomic levels (e.g. family, species, \r\ngenus, strain-level, etc.) are used for taxonomic classification of reads. Variants of \r\nthese databases, in which all human 24-mers were removed were also generated and used in \r\nthis study. These 24-mers were derived from the GRCh37.p10 (Genome Reference Consortium),\r\nHuRef (J. Craig Venter Institute), and CHM1_1.0 (Washington U. School of Medicine) \r\nassemblies and include unplaced scaffolds. For example, \r\nGOTTCHA_BACTERIA_c3514_k24_u24_xHUMAN3x.species.tar.gz is a GOTTCHA bacterial \r\nspecies-level signature database that was produced by eliminating shared 24-mer (k24) sequences from\r\n3514 bacterial replicons (c3514; includes both chromosomes and plasmids) and 3 human genomes (xHuman3X), \r\nwhile retaining a minimum of 24bp of unique fragments (u24).\r\n\r\nThe compressed database archives are available for users to download from our SFTP \r\nserver with the credential below:\r\n \r\n > SFTP server: img-gp.lanl.gov   \r\n > Port: 33001   \r\n > username: gottcha   \r\n > password: 9001gottcha   \r\n \r\nGOTTCHA requires a taxanomic lookup table (GOTTCHA_lookup.tar.gz) and a pre-computed\r\ndatabase (e.g: GOTTCHA_BACTERIA_c3514_k24_u24_xHUMAN3x.species.tar.gz) to classify reads.\r\nThese signature databases could be huge. We highly recommend that users also download the\r\ncorresponding *.md5 file for verification.\r\n\r\nYou can use the 'sftp' command to download both archives, one at a time:\r\n\r\n        $ sftp -o \"Port 33001\" gottcha@img-gp.lanl.gov:gottcha/GOTTCHA_lookup.tar.gz ./\r\n        $ sftp -o \"Port 33001\" gottcha@img-gp.lanl.gov:gottcha/GOTTCHA_BACTERIA_c3514_k24_u24_xHUMAN3x.species.tar.gz ./\r\n\r\nThen use 'tar' to unpack and decompress both archives:\r\n\r\n        $ tar -zxvf GOTTCHA_lookup.tar.gz\r\n        $ tar -zxvf GOTTCHA_BACTERIA_c3514_k24_u24_xHUMAN3x.species.tar.gz\r\n\r\nFiles will be expanded to ./database directory by default.\r\n\r\nHere is a list of the available pre-computed databases. Note that these databases are\r\nalso available in FASTA format at gottcha/FASTA/:\r\n\r\n  * GOTTCHA_BACTERIA_c3514_k24_u24.class.tar.gz (4.6GB)\r\n  * GOTTCHA_BACTERIA_c3514_k24_u24.family.tar.gz (4.6GB)\r\n  * GOTTCHA_BACTERIA_c3514_k24_u24.genus.tar.gz (4.5GB)\r\n  * GOTTCHA_BACTERIA_c3514_k24_u24.order.tar.gz (4.6GB)\r\n  * GOTTCHA_BACTERIA_c3514_k24_u24.phylum.tar.gz (4.6GB)\r\n  * GOTTCHA_BACTERIA_c3514_k24_u24.species.tar.gz (4.3GB)\r\n  * GOTTCHA_BACTERIA_c3514_k24_u24.strain.tar.gz (3.9GB)\r\n  * GOTTCHA_BACTERIA_c3514_k24_u24_xHUMAN3x.genus.tar.gz (4.5GB)\r\n  * GOTTCHA_BACTERIA_c3514_k24_u24_xHUMAN3x.species.tar.gz (4.3GB)\r\n  * GOTTCHA_BACTERIA_c3514_k24_u24_xHUMAN3x.strain.tar.gz (3.8GB)\r\n  * GOTTCHA_VIRUSES_c3498_k85_u24.genus.tar.gz (71MB)\r\n  * GOTTCHA_VIRUSES_c3498_k85_u24.species.tar.gz (68MB)\r\n  * GOTTCHA_VIRUSES_c3498_k85_u24.strain.tar.gz (68MB)\r\n  * GOTTCHA_VIRUSES_c3498_k85_u24_xHUMAN3x.genus.tar.gz (71MB)\r\n  * GOTTCHA_VIRUSES_c3498_k85_u24_xHUMAN3x.species.tar.gz (68MB)\r\n  * GOTTCHA_VIRUSES_c3498_k85_u24_xHUMAN3x.strain.tar.gz (68MB)\r\n\r\nNote: We have noticed that our SFTP server doesn't work for some IPs.\r\nIf you have any difficulty obtaining the databases, please contact Po-E Li <po-e@lanl.gov>.\r\n\r\n-------------------------------------------------------------------\r\n### Running GOTTCHA\r\n\r\nThe procedure includes 3 major steps: (1) split-trimming the input data, (2) mapping reads \r\nto a GOTTCHA database using BWA, and (3) profiling/filtering the results. These steps have\r\nbeen wrapped into a sigle script called 'gottcha.pl'. User will need to provide a FASTQ file\r\nas input and specify the location and name of the database.\r\n\r\nHere is the general usage to run GOTTCHA:\r\n\r\n > $ bin/gottcha.pl -i \\<FASTQ\\> -d \\<PATH/DATABASE_PREFIX\\>\r\n\r\nWe provided a testing FASTQ file and example output in ./test. The following command\r\nis an example that runs \"test.fastq\" through GOTTCHA using a species-level database with\r\n8 threads:\r\n\r\n        $ bin/gottcha.pl             \\\r\n             --threads 8             \\\r\n             --mode all              \\\r\n             --input test/test.fastq \\\r\n             --database database/GOTTCHA_BACTERIA_c3514_k24_u24_xHUMAN3x.species\r\n\r\nIn this case, we specify the output mode to \"all\" using \"--mode all\" option that\r\ngives us two output files and all intermediate ouptuts stored in \"test_temp\"\r\ndirectory. Both outputs are plain text files in tab-separated values format:\r\na summary table \"test.gottcha.tsv\" and a full information table \r\n\"test.gottcha_full.tsv\".\r\n\r\n-------------------------------------------------------------------\r\n### Interpreting Results\r\n\r\nGOTTCHA reports profiling results in a neat summary table (*.gottcha.tsv) by default.\r\nThe tsv file will list the organism(s) at all taxonomic levels from STRAIN to PHYLUM,\r\ntheir linear length, total bases mapped, linear depth of coverage, and the normalized \r\nlinear depth of coverage. The linear depth of coverage (LINEAR_DOC) is used to calculate \r\nrelative abundance of each organism or taxonomic name in the sample.\r\n\r\nSummary table:\r\n\r\n Column            | Description\r\n ----------------- | -------------------------------------------------------------------\r\n LEVEL             | taxonomic rank\r\n NAME              | taxonomic name\r\n REL_ABUNDANCE     | relative abundance (equivalent to NORM_COV by default)\r\n LINEAR_LENGTH     | number of non-overlapping bases covering the signatures\r\n TOTAL_BP_MAPPED   | sum total of all hit lengths recruited to signatures\r\n HIT_COUNT         | number of hits recruited to signatures\r\n HIT_COUNT_PLASMID | number of hits recruited to signatures\r\n READ_COUNT        | number of reads recruited to signatures\r\n LINEAR_DOC        | linear depth-of-coverage (TOTAL_BP_MAPPED / LINEAR_LENGTH)\r\n NORM_COV          | normalized linear depth-of-coverage (LINEAR_DOC / SUM(LINEAR_DOC in certain level))\r\n\r\nThere are two report modes available. Other than a summary table, \"full\" report \r\nmode will report a table with more detail information from unfiltered results. \r\nThe explanation of each column in the full report can be found in README_REPORT.md\r\nThe \"all\" report mode will keep all output files that were generated by each \r\nprofiling step.\r\n\r\n-------------------------------------------------------------------\r\n### Visulizing Results using Krona\r\n\r\n[Krona](http://sourceforge.net/p/krona/home/krona/) is an interactive browser that allows \r\nthe exploration of hierarchical data with pie charts. Assuming you have Krona installed properly,\r\nwe are going to create a Krona chart from a text file listing abundance and lineages. \r\nYou will find <PREFIX>.lineage.tsv file when you run gottcha.pl in \"all\" output mode.\r\n\r\nUse 'ktImportText' and save the chart to \"test.krona.html\":\r\n\r\n        $ ktImportText test_temp/test.lineage.tsv -o test.krona.html\r\n\r\n------------------------------------------------------------------\r\n## CITATION\r\n\r\nTracey Allen K. Freitas, Po-E Li, Matthew B. Scholz and Patrick S. G. Chain (2015) **Accurate read-based metagenome characterization using a hierarchical suite of unique signatures,** Nucleic Acids Research (DOI: 10.1093/nar/gkv180)\r\n\r\n-------------------------------------------------------------------\r\n## AUTHORS\r\n\r\nTracey Allen K. Freitas, Po-E Li, Matthew B. Scholz, Patrick S. G. Chain\r\nBioscience Division, Los Alamos National Laboratory, Los Alamos, NM 87545\r\n\r\n-------------------------------------------------------------------\r\n## ACKNOWLEDGEMENTS\r\n\r\nWe would like to thank Jason Gans for critical discussions on classification and machine \r\nlearning techniques, and Shihai Feng for the generation of synthetic datasets.\r\n\r\nThis project is funded by U.S. Defense Threat Reduction Agency [R-00059-12-0 and R-00332-13-0 to P.S.G.C.].\r\n\r\n-------------------------------------------------------------------\r\n## CHANGE LOG\r\nVersion 1.0:\r\n> 1. Report the number of reads that hit to plasmids and provide an option to ignore them.\r\n> 2. Report the number of READ_COUNT.\r\n\r\nVersion 0.9e:\r\n> 1. Fix minor bugs\r\n> 2. Amend the display of runtime information\r\n\r\nVersion 0.9d:\r\n> 1. Splitrim allows lower-case bases in fastq file\r\n> 2. Fix bugs that fail to specify output directory\r\n> 3. Minor bug fix\r\n\r\nVersion 0.9c:\r\n> 1. Fix FASTQ header compatibility\r\n> 2. Provide more information while running GOTTCHA\r\n\r\nVersion 0.9b (05/12/2014):\r\n> 1. Add '--stDir' option for pre-splitrimmed input file\r\n> 1. Performance improvement\r\n\r\nVersion 0.9a (04/30/2014):\r\n> 1. Provide bwaOpt option for user to use their own parameters to run BWA-MEM.\r\n> 2. Use absolute path to run system calls\r\n> 3. Provide 'relAbui' option to choose column to calculate relative abundance.\r\n\r\nVersion 0.9:\r\n> 1. Initial release\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}